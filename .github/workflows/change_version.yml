# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      current_version:
        description: 'Current release version'
        # Default value if no value is explicitly provided
        #default: '0.0.1-SNAPSHOT'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string  
      new_pom_version:
        description: 'New release version'
        # Default value if no value is explicitly provided
        #default: '0.0.1-SNAPSHOT'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      tag_version:
        description: 'New tag version'
        # Default value if no value is explicitly provided
        #default: 'v25.1.1'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: git
      run: |
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        echo 'starting git tasks'
        git --version
        git config user.name "mayurgite"
        git config user.email "mayurgite.it@gmail.com"
        git status
        # git tag ${{inputs.tag_version}}
        # git push --tags
        mvn versions:set -DnewVersion=${{inputs.new_pom_version}}
        #find ./ -type f -exec sed -i 's/supernova/magicGaana/g' {} \;
        #git add -u
        sed -i 's/name: ${{inputs.current_version}}/name: ${{inputs.new_pom_version}}/g' src/main/resources/application.properties
        git commit -a -m "Updated pom version to ${{inputs.new_pom_version}}"
        git push
        echo 'Ended git tasks'
